{% from 'dovecot/map.jinja' import dovecot_settings with context %}
{% set cfg = dovecot_settings['config'] %}

{%- macro get_config(configname, default_value, state='#') -%}
{%-     if configname in cfg -%}
{{ configname }} = {{ cfg[configname] }}
{%-     elif default_value is defined -%}
{{ state }}{{ configname }} = {{ default_value }}
{%-     else -%}
{{ state }}{{ configname }} =
{%-     endif -%}
{%- endmacro -%}

{%- macro to_include(auth_service, default_include=false ) -%}
{%- set toinclude = cfg[auth_service]|default(default_include) -%}
{%-     if toinclude -%}
!include {{ auth_service }}.conf.ext
{%-     else -%}
#!include {{ auth_service }}.conf.ext
{%-     endif -%}
{%- endmacro -%}

{%- macro namespace(name, key) -%}
{%- set cfg_nm = cfg.get(key, {}) -%}
namespace {{ name }} {
{% if cfg_nm.get(name, {}) is defined -%}
{% for key, value in cfg_nm[name].iteritems() -%}
{%     if value is mapping and value is iterable %}
    {{ key }} {
{%-        for subkey, subvalue in value.iteritems() %}
        {{ subkey }} = {{ subvalue }}
{%-        endfor %}
    }
{%-   else %}
    {{ key }} = {{ value }}
{%    endif -%}
{% endfor -%}
{%- else -%}
    #WARNING: variable not defined!
{%- endif -%}
}
{%- endmacro -%}


{%- macro set_service(srv) -%}
{%- set cfg_srv = cfg['service'].get(srv, {}) -%}
service {{ srv }} {
{% if cfg_srv['intro']|default(false) %}  {{ cfg_srv['intro'] }}{% endif %}
{%- for key in cfg_srv if not key == 'intro' -%}
{%-     if key[-2:] == ' {' %}
    {{ key }}
{%-         if cfg_srv[key] is mapping and cfg_srv[key] is not string -%}
{%-             for subkey, subvalue in cfg_srv[key].iteritems() %}
        {{ subkey }} = {{ subv }}
{%-             endfor %}
{%-         else %}
        {{ cfg_srv[key] }}
{%-        endif %}
    }
{%-      elif cfg_srv[key] is string or cfg_srv[key] is number %}
    {{ key }} = {{ value }}
{%-      else %}
    {{ cfg_srv[key]['comment']|default('') }}
    {{ key }} = {{ cfg_srv[key]['value']|default('missing value') }}
{%-      endif %}
{%- endfor %}
}
{%- endmacro -%}

{%- macro service() -%}
{% for srv in cfg['service']|default({}) %}
#{{ srv }}
{{ set_service(srv) }}
{% endfor %}
{%- endmacro -%}

